import "./component.css";
import { Navbar } from "./navbar";
import { Closetmodel } from "./closetmodel";
import lamp from "./images/lamp.png";
import light from "./images/light.png";
import { useState } from "react";
import { useHistory } from "react-router";

export function Component({
  lighting,
  setlighting,
  closetcolor,
  setclosetcolor,
}) {
  const preDefinedMatches = [
    { 1: "black", 2: "skyblue" },
    { 1: "tan", 2: "maroon" },
    { 1: "pink", 2: "grey" },
    { 1: "orange", 2: "blue" },
    { 1: "white", 2: "#95ce95" },
  ];
  const history = useHistory();

  const [color, setcolor] = useState({});
  const [closet, setcloset] = useState(false);
  const [preview, setpreview] = useState(false);

  function getRandamized() {
    setpreview(true);
    var randomMatch =
      preDefinedMatches[Math.floor(Math.random() * preDefinedMatches.length)];
    setcolor({ 1: randomMatch[1], 2: randomMatch[2] });
  }

  function fromCloset() {
    setpreview(true);
    if (sessionStorage.getItem("token")) {
      var tone = ["light", "dark"];
      var randomToneTop = tone[Math.floor(Math.random() * tone.length)];
      if (randomToneTop == "light") var randomToneBottom = "dark";
      else var randomToneBottom = "light";
      var topRange = JSON.parse(sessionStorage.getItem("value")).top[
        randomToneTop
      ];
      var bottomRange = JSON.parse(sessionStorage.getItem("value")).bottom[
        randomToneBottom
      ];
      var randomColorTop =
        topRange[Math.floor(Math.random() * topRange.length)];
      var randomColorBottom =
        bottomRange[Math.floor(Math.random() * bottomRange.length)];
      setcolor({ 1: randomColorTop, 2: randomColorBottom });
    } else history.push("/login");
  }
  return (
    <div className="basepage">
      <Navbar setlighting={setlighting} lighting={lighting} />

      <div className="maintemplate">
        <div className="imagepositioning">
          <img src={lamp} className="lamp" alt="lamp" />
          {lighting ? (
            <img src={light} className="light" alt="light" />
          ) : (
            <div className="dark"></div>
          )}

          <div className="svgsection">
            <svg
              version="1.0"
              xmlns="http://www.w3.org/2000/svg"
              width="22rem"
              height="35rem"
              viewBox="0 0 5400.000000 7200.000000"
              preserveAspectRatio="xMidYMid meet"
              className="componenttop"
            >
              <g
                transform="translate(0.000000,7800.000000) scale(0.100000,-0.100000)"
                fill={color[1]}
                stroke="none"
              >
                <path
                  d="M27996 55095 c-3 -8 -8 -37 -12 -64 -5 -40 -1 -63 25 -132 33 -90 65   
-220 76 -311 7 -63 13 -59 -96 -74 -42 -5 -59 -17 -160 -110 -72 -65 -179
-147 -289 -221 -165 -111 -188 -123 -405 -211 l-230 -94 -224 22 -224 22 -98
-98 -97 -97 -36 -146 c-29 -121 -36 -172 -41 -300 -6 -141 -4 -167 21 -302
l28 -148 -33 -106 c-27 -91 -104 -285 -261 -660 -21 -49 -76 -171 -123 -270
-46 -99 -98 -211 -116 -250 -79 -172 -125 -265 -128 -261 -3 2 -13 66 -23 143
-10 76 -53 326 -94 555 -42 229 -83 483 -92 565 -44 415 -43 375 -17 465 16
54 46 119 89 190 l65 109 9 126 9 126 -173 173 -173 172 -7 106 c-9 127 7 242
38 284 11 16 54 72 93 124 l73 95 5 109 c3 60 8 135 10 167 l5 58 -98 -6 c-96
-7 -98 -7 -282 -95 -111 -53 -249 -109 -345 -141 -88 -29 -165 -57 -171 -63
-6 -6 -19 -100 -28 -210 -10 -109 -22 -210 -27 -223 -5 -13 -9 -35 -9 -48 0
-19 -6 -25 -32 -30 -29 -5 -755 -102 -1158 -155 -80 -10 -332 -44 -560 -75
-228 -31 -498 -67 -600 -80 -102 -13 -369 -49 -595 -79 -608 -82 -1520 -204
-1685 -226 -80 -10 -703 -94 -1385 -185 -682 -91 -1375 -184 -1540 -205 -165
-22 -347 -47 -405 -55 -94 -13 -870 -117 -1345 -180 -99 -13 -423 -56 -720
-95 -297 -39 -549 -73 -560 -75 -17 -4 -25 -21 -44 -107 -12 -57 -33 -148 -47
-203 -13 -55 -46 -198 -74 -318 l-50 -217 0 -428 0 -427 40 -325 c22 -179 44
-332 48 -342 17 -39 234 -288 255 -292 12 -3 274 -30 582 -61 l560 -55 925 0
c648 0 1151 6 1680 20 415 11 958 24 1205 30 l450 11 310 -92 c342 -101 313
-96 910 -164 366 -42 555 -53 956 -55 323 -2 231 -18 724 118 138 38 253 66
257 63 7 -6 -139 -402 -231 -627 -22 -55 -57 -154 -77 -220 -20 -65 -49 -142
-65 -171 l-30 -52 7 -193 7 -193 52 -150 c29 -82 78 -217 108 -300 30 -82 96
-283 146 -446 84 -273 100 -316 214 -560 69 -145 136 -289 150 -320 24 -53 27
-79 51 -435 l27 -379 -56 -555 c-30 -305 -59 -575 -65 -600 -5 -25 -44 -227
-85 -450 -42 -223 -87 -450 -100 -505 -13 -55 -47 -194 -75 -310 -28 -115 -69
-282 -90 -370 -21 -88 -70 -288 -108 -445 -39 -157 -95 -389 -126 -517 l-56
-231 -151 -329 c-83 -180 -188 -409 -234 -508 -45 -99 -92 -214 -103 -255 -12
-41 -59 -210 -106 -375 -46 -165 -96 -345 -111 -400 -15 -55 -37 -138 -50
-185 -12 -47 -37 -139 -54 -205 -18 -66 -39 -143 -47 -170 -10 -35 -15 -115
-17 -265 l-2 -214 165 -103 c91 -57 194 -121 230 -144 484 -304 568 -352 700
-404 74 -29 254 -100 400 -158 146 -58 398 -158 560 -222 581 -230 461 -196
978 -276 1102 -171 996 -157 1086 -143 123 19 377 58 736 114 179 28 453 71
610 95 157 24 400 62 541 84 l256 40 199 79 c109 44 397 160 639 257 242 98
483 195 535 215 384 151 615 250 1500 648 80 35 183 81 230 102 303 132 348
155 470 243 69 50 190 138 270 195 80 57 148 108 153 111 4 4 -6 160 -23 347
l-31 339 -311 620 c-309 616 -360 713 -643 1230 -81 149 -187 342 -235 430
-48 88 -153 282 -235 430 -81 149 -171 313 -200 365 -28 52 -86 158 -128 235
-42 77 -117 237 -167 355 -50 118 -126 298 -170 400 -172 404 -257 606 -268
635 -10 25 -37 482 -68 1150 l-7 140 86 265 c78 244 202 629 314 975 25 77 65
217 88 310 37 146 51 185 98 270 30 55 149 273 265 485 115 212 226 416 247
453 31 57 67 96 207 225 l169 157 107 41 c59 22 166 63 237 91 72 28 240 94
375 146 135 53 315 123 400 157 l155 61 1170 79 1170 80 915 0 c1047 -1 3071
25 3235 40 61 6 205 24 320 40 116 16 345 47 510 70 165 22 329 45 365 50 150
22 1125 183 1129 186 2 2 -27 63 -65 136 -37 73 -119 232 -181 353 l-113 220
-19 354 -20 354 55 346 c31 190 62 385 69 434 10 66 11 112 4 190 -6 56 -12
107 -14 113 -2 7 -52 14 -132 18 -70 4 -193 11 -273 17 -80 5 -523 32 -985 60
l-840 51 -565 -6 c-311 -3 -892 -11 -1292 -17 -766 -11 -704 -12 -1283 31
-277 21 -434 32 -1150 85 -407 30 -776 57 -820 60 -89 7 -79 3 -850 342 -44
19 -114 50 -155 68 l-75 32 -235 -13 c-129 -7 -485 -27 -790 -44 -305 -17
-697 -39 -870 -49 l-315 -19 -359 44 c-198 25 -362 46 -364 48 -2 3 -3 80 -2
173 1 188 -8 146 134 611 31 101 56 189 56 196 0 7 -37 38 -82 69 -46 31 -149
112 -229 180 l-147 123 -138 38 c-199 54 -324 76 -440 76 -81 0 -103 -3 -108
-15z"
                />
              </g>
            </svg>

            <svg
              version="1.0"
              xmlns="http://www.w3.org/2000/svg"
              width="22rem"
              height="35rem"
              viewBox="0 0 5400.000000 7200.000000"
              preserveAspectRatio="xMidYMid meet"
              className="componentbottom"
            >
              <g
                transform="translate(0.000000,4000.000000) scale(0.100000,-0.100000)"
                fill={color[2]}
                stroke="none"
              >
                <path
                  d="M31284 39639 c-27 -18 -186 -115 -354 -217 -168 -102 -345 -210 -394
-240 -49 -30 -126 -71 -170 -90 -45 -19 -137 -58 -206 -87 -148 -62 -736 -311
-1330 -563 -266 -112 -468 -192 -540 -212 -139 -38 -428 -120 -972 -274 l-407
-115 -578 -71 c-318 -39 -701 -86 -851 -105 -150 -19 -279 -32 -285 -30 -7 3
-196 34 -422 70 -225 36 -506 82 -624 101 l-215 35 -655 216 c-651 215 -701
234 -1181 443 -372 163 -514 220 -521 213 -8 -8 -203 -531 -242 -648 -12 -35
-24 -161 -42 -425 -14 -206 -32 -465 -40 -575 -8 -110 -15 -239 -15 -287 0
-68 102 -1599 136 -2033 3 -44 60 -512 125 -1039 l120 -959 204 -1141 c112
-628 260 -1422 330 -1766 69 -344 150 -749 181 -900 30 -151 79 -356 108 -455
30 -99 111 -373 181 -610 70 -236 156 -506 190 -600 35 -93 115 -312 179 -485
l115 -315 131 -725 c72 -399 160 -880 196 -1070 36 -190 85 -451 109 -580 30
-162 50 -308 65 -470 11 -129 30 -341 41 -470 30 -323 28 -421 -20 -1000 -75
-909 -75 -692 3 -1943 50 -818 72 -1115 86 -1182 10 -49 73 -349 140 -665 66
-316 154 -735 195 -930 41 -195 103 -472 138 -615 172 -691 233 -962 304
-1335 l77 -405 7 -515 c4 -283 12 -584 18 -668 l10 -152 125 -248 125 -247 84
-296 84 -296 -38 -234 c-21 -129 -39 -245 -39 -259 0 -14 21 -92 46 -175 25
-82 52 -170 59 -195 7 -25 25 -83 39 -129 14 -47 26 -95 26 -107 0 -20 -43
-183 -101 -377 -11 -37 -65 -154 -120 -260 l-100 -191 16 -36 c38 -84 23 -79
295 -95 135 -8 391 -33 570 -55 292 -36 363 -49 700 -126 206 -47 383 -90 392
-95 9 -5 87 -54 173 -110 86 -55 158 -99 159 -97 2 1 11 188 20 413 15 359 43
983 76 1670 5 116 28 595 50 1065 97 2063 110 2355 119 2529 7 125 5 747 -5
1910 l-14 1726 -75 1179 c-69 1075 -78 1200 -110 1410 -40 259 -83 549 -120
796 -14 91 -43 284 -65 430 -22 146 -51 391 -65 545 -27 312 -23 268 -101
1155 l-56 645 27 580 c14 319 30 588 33 598 14 36 131 -670 158 -953 14 -146
38 -400 54 -565 16 -165 36 -444 45 -620 25 -508 83 -1072 155 -1510 33 -203
67 -413 75 -465 25 -163 64 -905 69 -1345 3 -225 10 -491 16 -590 6 -99 28
-544 50 -990 22 -445 62 -1262 90 -1815 129 -2604 193 -3891 218 -4405 l28
-560 -48 -1140 c-26 -627 -51 -1225 -55 -1328 -4 -104 -5 -191 0 -194 4 -2
193 -4 420 -3 346 2 423 0 482 -14 182 -41 1217 -256 1235 -256 18 0 20 7 20
78 1 201 30 1257 40 1412 6 96 26 443 45 770 l34 595 166 600 c151 546 218
773 525 1770 54 176 105 343 113 370 8 28 69 226 135 440 161 522 160 518 452
1645 21 80 70 267 109 416 l71 270 0 973 0 972 -49 217 c-27 119 -116 510
-196 867 -286 1268 -269 1201 -361 1470 -212 621 -195 560 -273 1005 l-71 406
81 509 c44 281 86 535 93 565 7 30 61 222 120 425 109 374 161 554 371 1285
115 401 194 672 379 1317 94 326 100 352 301 1375 l205 1043 90 1260 91 1260
24 1030 c13 567 27 1116 30 1220 6 181 4 213 -44 675 -28 267 -55 526 -61 575
-5 50 -42 402 -81 784 l-71 694 -73 156 c-40 86 -163 347 -274 581 l-201 425
-97 97 c-54 54 -102 98 -108 98 -6 0 -33 -14 -61 -31z"
                />
              </g>
            </svg>
          </div>
          <div className="color-box">
            <div className="section1" style={{ background: color[1] }}></div>
            <div className="section2" style={{ background: color[2] }}></div>
          </div>
        </div>

        <div className="detailtab">
        <div className="content-box">
          <h3> Fashion </h3>
          <h4>Your idea partner</h4>

          <div className="cboxbtns"> 
            <div className="choicebtn" onClick={() => getRandamized()}>
             <i>Randamize</i> 
            </div>
            <div className="choicebtn" onClick={() => fromCloset()}>
              <i> From closet</i>
              </div>
            <div className="choicebtn" onClick={() => setcloset(true)}>
              <i> Closet</i>
             </div>
            <div className="choicebtn" onClick={() => history.push("/tour")}>
              <i>Tour</i>
              </div>
          
        
       </div>
       
          </div>
          <div className="detailtabs">
         <h6><u>Randamize:</u> Will give you evergreen combinations</h6>
         <h6><u>From CLoset:</u> Will give combinations from your cloet</h6>
         <h6><u>Closet:</u> Will allow you to add dress to your closet</h6>
         <h6><u>Tour:</u>Will allow to pack dress for tour from your closet</h6>
       </div>
          </div>
          {closet == true ? (
            <Closetmodel
              setcloset={setcloset} 
              closetcolor={closetcolor}
              setclosetcolor={setclosetcolor}
            />
          ) : (
            ""
          )}
   
      </div>
     
    </div>
  );
}
